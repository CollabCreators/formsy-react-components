{"version":3,"sources":["webpack://formsy-react-components/webpack/universalModuleDefinition","webpack://formsy-react-components/./node_modules/classnames/dedupe.js","webpack://formsy-react-components/external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack://formsy-react-components/external {\"root\":\"formsy-react\",\"commonjs2\":\"formsy-react\",\"commonjs\":\"formsy-react\",\"amd\":\"formsy-react\"}","webpack://formsy-react-components/webpack/bootstrap","webpack://formsy-react-components/webpack/runtime/compat get default export","webpack://formsy-react-components/webpack/runtime/define property getters","webpack://formsy-react-components/webpack/runtime/hasOwnProperty shorthand","webpack://formsy-react-components/webpack/runtime/make namespace object","webpack://formsy-react-components/./src/components/component-common.ts","webpack://formsy-react-components/./src/components/error-messages.tsx","webpack://formsy-react-components/./src/components/help.tsx","webpack://formsy-react-components/./src/components/required-symbol.tsx","webpack://formsy-react-components/./src/components/label.tsx","webpack://formsy-react-components/./src/components/row.tsx","webpack://formsy-react-components/./src/components/checkbox.tsx","webpack://formsy-react-components/./src/components/form-check-group.tsx","webpack://formsy-react-components/./src/components/checkbox-group.tsx","webpack://formsy-react-components/./src/debounce.ts","webpack://formsy-react-components/./src/components/controls/input.tsx","webpack://formsy-react-components/./src/components/input-group.tsx","webpack://formsy-react-components/./src/components/input.tsx","webpack://formsy-react-components/./src/components/controls/input-file.tsx","webpack://formsy-react-components/./src/components/input-file.tsx","webpack://formsy-react-components/./src/components/radio-group.tsx","webpack://formsy-react-components/./src/components/controls/select.tsx","webpack://formsy-react-components/./src/components/select.tsx","webpack://formsy-react-components/./src/components/controls/textarea.tsx","webpack://formsy-react-components/./src/components/textarea.tsx","webpack://formsy-react-components/./src/context/frc.ts","webpack://formsy-react-components/./src/form.tsx","webpack://formsy-react-components/./src/utils.ts","webpack://formsy-react-components/./src/hoc/component.tsx","webpack://formsy-react-components/./src/index.ts"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__333__","__WEBPACK_EXTERNAL_MODULE__698__","classNames","StorageObject","_parseArray","resultSet","array","length","i","_parse","prototype","Object","create","hasOwn","hasOwnProperty","SPACE","arg","argType","str","split","_parseString","Array","isArray","object","toString","k","call","_parseObject","num","_parseNumber","len","arguments","args","classSet","list","push","join","default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","defineProperty","enumerable","get","obj","prop","r","Symbol","toStringTag","value","componentDefaultProps","changeCallback","name","elementWrapperClassName","errorMessages","help","id","isPristine","label","labelClassName","layout","onSetValue","rowClassName","showErrors","ErrorMessages","messageNodes","map","message","className","defaultProps","messages","RequiredSymbol","required","symbol","fakeLabel","htmlFor","labelClassNames","HorizontalElementWrapper","children","wrapperClassNames","rowClassNames","renderLabel","valueLabel","elementRef","props","handleChange","event","currentTarget","checked","renderElement","inputProps","keys","forEach","onChange","ref","type","render","element","FormCheckGroup","passProps","options","elements","filter","option","disabled","markAsInvalid","inputClassName","controls","checkbox","indexOf","isDisabled","inputId","isLast","control","input","fn","time","pending","lastArgs","lastThis","cancel","clearTimeout","run","currentThis","currentArgs","apply","debounced","setTimeout","flush","passthroughProps","inputClassNames","addonBefore","addonAfter","buttonBefore","buttonAfter","renderAddon","addon","position","blurCallback","blurDebounceInterval","changeDebounceInterval","keyDownCallback","updateOnBlur","updateOnChange","setValue","state","incomingPropValue","blurDebounced","changeDebounced","handleBlur","propValue","setState","currentValue","handleKeyDown","valueIsChanging","debounce","getDerivedStateFromProps","shouldComponentUpdate","nextProps","nextState","passthoughProps","onBlur","onKeyDown","inputGroupProps","rowProps","target","files","radio","renderOption","item","rest","optionNodes","groups","group","index","self","itemsWithoutGroup","groupIndex","groupOptionNodes","selectProps","multiple","from","selected","cols","rows","filteredInputProps","FrcContext","createContext","validateBeforeSubmit","validatePristine","displayName","formDefaultProps","formsyForm","formsyPassthroughProps","contextProps","getFallbackBoolean","b","c","hashString","inString","hash","charCodeAt","Component","context","contextLayout","contextValidateBeforeSubmit","contextValidatePristine","isFormDisabled","isFormSubmitted","isValid","propValidateBeforeSubmit","propValidatePristine","propLayout","propDisabled","propId","propLabel","propName","componentRef","shouldShowErrors","newProps","replace","JSON","stringify","component","getDisplayName","contextType","withFormsy"],"mappings":"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","file":"main.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"formsy-react\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"formsy-react\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"formsy-react-components\"] = factory(require(\"formsy-react\"), require(\"react\"));\n\telse\n\t\troot[\"formsy-react-components\"] = factory(root[\"formsy-react\"], root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__333__, __WEBPACK_EXTERNAL_MODULE__698__) {\nreturn ","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar classNames = (function () {\n\t\t// don't inherit from Object so we can skip hasOwnProperty check later\n\t\t// http://stackoverflow.com/questions/15518328/creating-js-object-with-object-createnull#answer-21079232\n\t\tfunction StorageObject() {}\n\t\tStorageObject.prototype = Object.create(null);\n\n\t\tfunction _parseArray (resultSet, array) {\n\t\t\tvar length = array.length;\n\n\t\t\tfor (var i = 0; i < length; ++i) {\n\t\t\t\t_parse(resultSet, array[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar hasOwn = {}.hasOwnProperty;\n\n\t\tfunction _parseNumber (resultSet, num) {\n\t\t\tresultSet[num] = true;\n\t\t}\n\n\t\tfunction _parseObject (resultSet, object) {\n\t\t\tif (object.toString === Object.prototype.toString) {\n\t\t\t\tfor (var k in object) {\n\t\t\t\t\tif (hasOwn.call(object, k)) {\n\t\t\t\t\t\t// set value to false instead of deleting it to avoid changing object structure\n\t\t\t\t\t\t// https://www.smashingmagazine.com/2012/11/writing-fast-memory-efficient-javascript/#de-referencing-misconceptions\n\t\t\t\t\t\tresultSet[k] = !!object[k];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresultSet[object.toString()] = true;\n\t\t\t}\n\t\t}\n\n\t\tvar SPACE = /\\s+/;\n\t\tfunction _parseString (resultSet, str) {\n\t\t\tvar array = str.split(SPACE);\n\t\t\tvar length = array.length;\n\n\t\t\tfor (var i = 0; i < length; ++i) {\n\t\t\t\tresultSet[array[i]] = true;\n\t\t\t}\n\t\t}\n\n\t\tfunction _parse (resultSet, arg) {\n\t\t\tif (!arg) return;\n\t\t\tvar argType = typeof arg;\n\n\t\t\t// 'foo bar'\n\t\t\tif (argType === 'string') {\n\t\t\t\t_parseString(resultSet, arg);\n\n\t\t\t// ['foo', 'bar', ...]\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\t_parseArray(resultSet, arg);\n\n\t\t\t// { 'foo': true, ... }\n\t\t\t} else if (argType === 'object') {\n\t\t\t\t_parseObject(resultSet, arg);\n\n\t\t\t// '130'\n\t\t\t} else if (argType === 'number') {\n\t\t\t\t_parseNumber(resultSet, arg);\n\t\t\t}\n\t\t}\n\n\t\tfunction _classNames () {\n\t\t\t// don't leak arguments\n\t\t\t// https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n\t\t\tvar len = arguments.length;\n\t\t\tvar args = Array(len);\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\targs[i] = arguments[i];\n\t\t\t}\n\n\t\t\tvar classSet = new StorageObject();\n\t\t\t_parseArray(classSet, args);\n\n\t\t\tvar list = [];\n\n\t\t\tfor (var k in classSet) {\n\t\t\t\tif (classSet[k]) {\n\t\t\t\t\tlist.push(k)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list.join(' ');\n\t\t}\n\n\t\treturn _classNames;\n\t})();\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","module.exports = __WEBPACK_EXTERNAL_MODULE__698__;","module.exports = __WEBPACK_EXTERNAL_MODULE__333__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {Argument as ClassValue} from 'classnames';\nimport {LayoutType, ComponentValue} from '../types';\n\nexport const componentDefaultProps = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n  changeCallback: (name: string, value: ComponentValue): void => {},\n  elementWrapperClassName: '' as ClassValue,\n  errorMessages: [] as React.ReactNode[],\n  help: '',\n  id: '',\n  isPristine: true,\n  label: null as React.ReactNode,\n  labelClassName: '' as ClassValue,\n  layout: 'horizontal' as LayoutType,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n  onSetValue: (value: ComponentValue): void => {},\n  rowClassName: '' as ClassValue,\n  showErrors: true,\n};\n","import * as React from 'react';\n\ninterface Props {\n  messages: React.ReactNode[];\n}\n\nconst ErrorMessages: React.FunctionComponent<Props> = ({messages}) => {\n  const messageNodes = messages.map((message, key) => (\n    <div key={key}>{message}</div>\n  ));\n  return <div className=\"invalid-feedback\">{messageNodes}</div>;\n};\n\nErrorMessages.defaultProps = {\n  messages: [],\n};\n\nexport default ErrorMessages;\n","import * as React from 'react';\n\ninterface Props {\n  help: string;\n}\n\nconst Help: React.FunctionComponent<Props> = ({help}) => (\n  <small className=\"form-text text-muted\">{help}</small>\n);\n\nexport default Help;\n","import * as React from 'react';\n\ninterface Props {\n  required: boolean;\n  symbol?: React.ReactNode;\n}\n\nconst RequiredSymbol: React.FunctionComponent<Props> = ({required, symbol}) => {\n  if (required === false) {\n    return null;\n  }\n  return <span className=\"required-symbol\">{symbol}</span>;\n};\n\nRequiredSymbol.defaultProps = {\n  symbol: ' *',\n};\n\nexport default React.memo(RequiredSymbol);\n","import * as React from 'react';\nimport classNames from 'classnames/dedupe'; // eslint-disable-line import/default\nimport RequiredSymbol from './required-symbol';\nimport {Argument as ClassValue} from 'classnames';\nimport {LayoutType} from '../types';\n\ninterface Props {\n  fakeLabel: boolean;\n  htmlFor: string;\n  label: React.ReactNode;\n  labelClassName: ClassValue;\n  layout: LayoutType;\n  required: boolean;\n}\n\nconst Label: React.FunctionComponent<Props> = ({\n  fakeLabel = false,\n  htmlFor = '',\n  label = null,\n  labelClassName = '',\n  layout = 'horizontal',\n  required = false,\n}) => {\n  if (layout === 'elementOnly') {\n    return null;\n  }\n\n  const labelClassNames = classNames([\n    'col-form-label',\n    layout === 'horizontal' ? 'col-sm-3' : '',\n    labelClassName,\n  ]);\n\n  if (fakeLabel) {\n    return (\n      <div className={labelClassNames} data-required={required}>\n        {label}\n        <RequiredSymbol required={required} />\n      </div>\n    );\n  }\n\n  return (\n    <label\n      className={labelClassNames}\n      data-required={required}\n      htmlFor={htmlFor}>\n      {label}\n      <RequiredSymbol required={required} />\n    </label>\n  );\n};\n\nexport default React.memo(Label);\n","import * as React from 'react';\nimport classNames from 'classnames/dedupe';\nimport {Argument as ClassValue} from 'classnames';\nimport Label from './label';\nimport {LayoutType} from '../types';\n\ninterface RowProps {\n  elementWrapperClassName?: ClassValue;\n  errorMessages?: React.ReactNode[];\n  fakeLabel?: boolean;\n  htmlFor?: string;\n  label?: React.ReactNode;\n  labelClassName?: ClassValue;\n  layout?: LayoutType;\n  required?: boolean;\n  rowClassName?: ClassValue;\n  showErrors?: boolean;\n}\n\ninterface HorizontalElementWrapperProps {\n  elementWrapperClassName: ClassValue;\n  renderLabel: boolean;\n}\n\nconst HorizontalElementWrapper: React.FC<HorizontalElementWrapperProps> = ({\n  children,\n  elementWrapperClassName,\n  renderLabel,\n}) => {\n  const wrapperClassNames = [] as ClassValue[];\n  if (!renderLabel) {\n    wrapperClassNames.push('offset-sm-3');\n  }\n  wrapperClassNames.push('col-sm-9');\n  wrapperClassNames.push(elementWrapperClassName);\n\n  return <div className={classNames(wrapperClassNames)}>{children}</div>;\n};\n\nconst Row: React.FunctionComponent<RowProps> = ({\n  children,\n  elementWrapperClassName = '',\n  errorMessages = [],\n  fakeLabel = false,\n  htmlFor = '',\n  label = null,\n  labelClassName = '',\n  layout = 'horizontal',\n  required = false,\n  rowClassName = '',\n  showErrors = false,\n}) => {\n  if (layout === 'elementOnly') {\n    return <span>{children}</span>;\n  }\n\n  const rowClassNames = ['form-group'] as ClassValue[];\n  if (showErrors && (errorMessages.length > 0 || required)) {\n    rowClassNames.push('text-danger');\n  }\n  if (layout === 'horizontal') {\n    rowClassNames.push('form-row');\n  }\n  rowClassNames.push(rowClassName);\n\n  // We should render the label if there is label text defined, or if the\n  // component is required (so a required symbol is displayed in the label tag)\n  const renderLabel = label !== null || required;\n\n  return (\n    <div className={classNames(rowClassNames)}>\n      {renderLabel ? (\n        <Label\n          fakeLabel={fakeLabel}\n          htmlFor={htmlFor}\n          label={label}\n          labelClassName={labelClassName}\n          layout={layout}\n          required={required}\n        />\n      ) : null}\n      {layout === 'horizontal' ? (\n        <HorizontalElementWrapper\n          elementWrapperClassName={elementWrapperClassName}\n          renderLabel={renderLabel}>\n          {children}\n        </HorizontalElementWrapper>\n      ) : (\n        children\n      )}\n    </div>\n  );\n};\n\nexport default Row;\n","import * as React from 'react';\nimport {CommonProps as CommonControlProps} from './controls/common-prop-types';\nimport {componentDefaultProps} from './component-common';\nimport ErrorMessages from './error-messages';\nimport Help from './help';\nimport Row from './row';\n\ntype CommonControlPropsCleaned = Omit<CommonControlProps, 'id' | 'name'>;\n\nconst defaultProps = {\n  ...componentDefaultProps,\n  value: false,\n  valueLabel: '',\n  elementRef: React.createRef<HTMLInputElement>(),\n};\n\ntype Props = CommonControlPropsCleaned &\n  typeof defaultProps & {\n    name: string;\n  };\n\ntype State = Record<string, unknown>;\n\nclass Checkbox extends React.Component<Props, State> {\n  public static defaultProps = defaultProps;\n\n  // Need to supply a constructor to be recognised as ComponentClass?\n  public constructor(props) {\n    super(props);\n  }\n\n  private handleChange = (event): void => {\n    const value = event.currentTarget.checked;\n    const {onSetValue, changeCallback, name} = this.props;\n    onSetValue(value);\n    changeCallback(name, value);\n  };\n\n  private renderElement = (): JSX.Element => {\n    const {elementRef, id, label, value, valueLabel, ...inputProps} =\n      this.props;\n    Object.keys(componentDefaultProps).forEach((key): void => {\n      delete inputProps[key];\n    });\n\n    return (\n      <div className=\"custom-control custom-checkbox\">\n        <input\n          {...inputProps}\n          checked={value === true}\n          className=\"custom-control-input\"\n          id={id}\n          onChange={this.handleChange}\n          ref={elementRef}\n          type=\"checkbox\"\n        />\n        <label className=\"custom-control-label\" htmlFor={id}>\n          {valueLabel}\n        </label>\n      </div>\n    );\n  };\n\n  public render(): JSX.Element {\n    const element = this.renderElement();\n    const {errorMessages, help, id, labelClassName, layout, showErrors} =\n      this.props;\n\n    if (layout === 'elementOnly') {\n      return element;\n    }\n\n    return (\n      <Row\n        {...this.props}\n        fakeLabel\n        htmlFor={id}\n        labelClassName={['pt-0', labelClassName]}>\n        <>\n          {element}\n          {help ? <Help help={help} /> : null}\n          {showErrors ? <ErrorMessages messages={errorMessages} /> : null}\n        </>\n      </Row>\n    );\n  }\n}\n\nexport {Props};\nexport default Checkbox;\n","import * as React from 'react';\nimport ErrorMessages from './error-messages';\nimport Help from './help';\nimport Row from './row';\nimport {componentDefaultProps} from './component-common';\n\ntype FormCheckGroupProps = typeof componentDefaultProps & {\n  children: React.ReactElement;\n};\n\nconst FormCheckGroup: React.FunctionComponent<FormCheckGroupProps> = (\n  props,\n) => {\n  const {layout, help, showErrors, errorMessages, labelClassName, children} =\n    props;\n\n  if (layout === 'elementOnly') {\n    return children;\n  }\n\n  const {...passProps} = props;\n  //delete passProps.children;\n\n  return (\n    <Row {...passProps} labelClassName={['pt-0', labelClassName]} fakeLabel>\n      {children}\n      {help ? <Help help={help} /> : null}\n      {showErrors ? <ErrorMessages messages={errorMessages} /> : null}\n    </Row>\n  );\n};\n\nFormCheckGroup.defaultProps = componentDefaultProps;\n\nexport default FormCheckGroup;\n","import * as React from 'react';\nimport {componentDefaultProps} from './component-common';\nimport {CommonProps} from './controls/common-prop-types';\nimport FormCheckGroup from './form-check-group';\nimport ErrorMessages from './error-messages';\n\ntype CommonPropsCleaned = Omit<CommonProps, 'id' | 'name'>;\n\ninterface Option {\n  disabled?: boolean;\n  value: string;\n  label: string;\n}\n\ntype CheckboxLayout = 'inline' | 'stacked';\n\nconst defaultProps = {\n  ...componentDefaultProps,\n  options: [] as Option[],\n  value: [] as string[],\n  type: 'stacked' as CheckboxLayout,\n  required: false,\n};\n\ntype CheckboxGroupProps = typeof defaultProps &\n  CommonPropsCleaned & {\n    name: string;\n  };\n\ntype State = Record<string, unknown>;\n\nclass CheckboxGroup extends React.Component<CheckboxGroupProps, State> {\n  public static defaultProps = defaultProps;\n\n  public elements = {};\n\n  // Constructor must be present to determine type of component?\n  public constructor(props) {\n    super(props);\n  }\n\n  // Returns an array of the values of all checked items.\n  private handleChange = (): void => {\n    const {options, name, onSetValue, changeCallback} = this.props;\n    const checkedOptions = options.filter(\n      (option): boolean => this.elements[option.value].checked,\n    );\n    const value = checkedOptions.map((option): string => option.value);\n    onSetValue(value);\n    changeCallback(name, value);\n  };\n\n  private renderElement = (): JSX.Element[] => {\n    const {\n      disabled,\n      errorMessages,\n      id,\n      options,\n      required,\n      showErrors,\n      type,\n      name,\n      value,\n    } = this.props;\n\n    const markAsInvalid = showErrors && (errorMessages.length > 0 || required);\n\n    const className = `custom-control custom-checkbox${\n      type === 'inline' ? ' custom-control-inline' : ''\n    }`;\n\n    const inputClassName = `custom-control-input${\n      markAsInvalid ? ' is-invalid' : ''\n    }`;\n\n    const controls = [] as JSX.Element[];\n    for (let i = 0; i < options.length; i++) {\n      const checkbox = options[i];\n      const checked = value.indexOf(checkbox.value) !== -1;\n      const isDisabled = checkbox.disabled || disabled;\n      const inputId = `${id}--${checkbox.value}`;\n      const isLast = i == options.length - 1;\n      const control = (\n        <div className={className} key={checkbox.value}>\n          <input\n            ref={(input): void => {\n              this.elements[checkbox.value] = input;\n            }}\n            className={inputClassName}\n            checked={checked}\n            type=\"checkbox\"\n            value={checkbox.value}\n            onChange={this.handleChange}\n            disabled={isDisabled}\n            name={name}\n            id={inputId}\n            required={required}\n          />\n          <label className=\"custom-control-label\" htmlFor={inputId}>\n            {checkbox.label}\n          </label>\n          {isLast && showErrors ? (\n            <ErrorMessages messages={errorMessages} />\n          ) : null}\n        </div>\n      );\n      controls.push(control);\n    }\n    return controls;\n  };\n\n  public render(): JSX.Element {\n    return (\n      <FormCheckGroup {...this.props}>\n        <>{this.renderElement()}</>\n      </FormCheckGroup>\n    );\n  }\n}\n\nexport default CheckboxGroup;\n","export interface DebouncedFunction extends Function {\n  cancel: () => void;\n  flush: () => void;\n}\n\ntype Fn = (args?) => unknown;\n\nexport default (fn: Fn, time: number): DebouncedFunction => {\n  let pending;\n  let lastArgs;\n  let lastThis;\n\n  const cancel = (): void => {\n    clearTimeout(pending);\n    pending = undefined;\n  };\n\n  const run = (): void => {\n    if (lastArgs) {\n      const currentThis = lastThis;\n      const currentArgs = lastArgs;\n      lastThis = undefined;\n      lastArgs = undefined;\n      fn.apply(currentThis, currentArgs);\n    }\n  };\n\n  const flush = (): void => {\n    cancel();\n    run();\n  };\n\n  function debounced(...args): void {\n    lastThis = this;\n    lastArgs = args;\n    if (pending) {\n      clearTimeout(pending);\n    }\n    pending = setTimeout(run, time);\n  }\n\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n\n  return debounced;\n};\n","import * as React from 'react';\nimport classNames from 'classnames/dedupe';\nimport {Argument as ClassValue} from 'classnames';\n\nconst defaultProps = {\n  className: '' as ClassValue,\n  type: 'text',\n  elementRef: React.createRef<HTMLInputElement>(),\n};\n\ntype InputControlProps = React.InputHTMLAttributes<HTMLInputElement> &\n  typeof defaultProps;\n\ntype State = Record<string, unknown>;\n\nclass InputControl extends React.Component<InputControlProps, State> {\n  public static defaultProps = defaultProps;\n\n  public render(): JSX.Element {\n    const {className, type, elementRef, ...passthroughProps} = this.props;\n    const inputClassNames: ClassValue[] = ['form-control', className];\n    if (['hidden', 'range'].indexOf(type) !== -1) {\n      inputClassNames.push({'form-control': false});\n    }\n    if (type === 'range') {\n      inputClassNames.push('custom-range');\n    }\n    return (\n      <input\n        {...passthroughProps}\n        className={classNames(inputClassNames)}\n        ref={elementRef}\n        type={type}\n      />\n    );\n  }\n}\n\nexport {InputControlProps};\nexport default InputControl;\n","import * as React from 'react';\n\ninterface InputGroupProps {\n  addonAfter?: React.ReactNode;\n  addonBefore?: React.ReactNode;\n  buttonAfter?: React.ReactNode;\n  buttonBefore?: React.ReactNode;\n}\n\ntype InputGroupPosition = 'prepend' | 'append';\n\ntype InputGroupPropsWithChildren = InputGroupProps & {\n  children: JSX.Element;\n};\n\n/**\n * Wraps an input to implement a Bootstrap [Input Group](http://getbootstrap.com/components/#input-groups)\n */\nconst InputGroup = ({\n  children,\n  addonBefore = null,\n  addonAfter = null,\n  buttonBefore = null,\n  buttonAfter = null,\n}: InputGroupPropsWithChildren): JSX.Element => {\n  const renderAddon = (\n    addon: React.ReactNode,\n    position: InputGroupPosition,\n  ): React.ReactNode => {\n    if (addon === null) {\n      return null;\n    }\n    return <span className={`input-group-${position}`}>{addon}</span>;\n  };\n\n  return (\n    <div className=\"input-group\">\n      {renderAddon(addonBefore, 'prepend')}\n      {renderAddon(buttonBefore, 'prepend')}\n      {children}\n      {renderAddon(addonAfter, 'append')}\n      {renderAddon(buttonAfter, 'append')}\n    </div>\n  );\n};\n\nexport {InputGroupProps};\nexport default InputGroup;\n","import * as React from 'react';\nimport debounce from '../debounce';\nimport {componentDefaultProps} from './component-common';\nimport ErrorMessages from './error-messages';\nimport Help from './help';\nimport InputControl, {InputControlProps} from './controls/input';\nimport InputGroup, {InputGroupProps} from './input-group';\nimport Row from './row';\n\ntype InputControlPropsCleaned = Omit<\n  InputControlProps,\n  'required' | 'value' | 'className' | 'elementRef' | 'id' | 'name' | 'type'\n>;\n\ntype InputGroupPropsCleaned = Omit<InputGroupProps, 'children'>;\n\ntype SupportedInputType =\n  | 'color'\n  | 'date'\n  | 'datetime'\n  | 'datetime-local'\n  | 'email'\n  | 'hidden'\n  | 'month'\n  | 'number'\n  | 'password'\n  | 'range'\n  | 'search'\n  | 'tel'\n  | 'text'\n  | 'time'\n  | 'url'\n  | 'week';\n\nconst defaultProps = {\n  ...componentDefaultProps,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n  blurCallback: (name: string, value: string): void => {},\n  blurDebounceInterval: 0,\n  changeDebounceInterval: 500,\n  className: '',\n  elementRef: React.createRef<HTMLInputElement>(),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n  keyDownCallback: (event: React.KeyboardEvent<HTMLInputElement>): void => {},\n  required: false,\n  type: 'text' as SupportedInputType,\n  updateOnBlur: true,\n  updateOnChange: true,\n  value: '',\n};\n\ntype InputProps = InputControlPropsCleaned &\n  InputGroupPropsCleaned &\n  typeof componentDefaultProps &\n  InputGroupProps &\n  typeof defaultProps & {\n    name: string;\n  };\n\ninterface State {\n  currentValue: string;\n  incomingPropValue: string;\n  valueIsChanging: boolean;\n}\n\nclass Input extends React.Component<InputProps, State> {\n  public static defaultProps = defaultProps;\n\n  public changeDebounced;\n  public blurDebounced;\n\n  public constructor(props) {\n    super(props);\n    const {value, changeDebounceInterval, blurDebounceInterval} = props;\n    this.state = {\n      currentValue: value,\n      incomingPropValue: value,\n      valueIsChanging: false,\n    };\n    this.changeDebounced = debounce(this.setValue, changeDebounceInterval);\n    this.blurDebounced = debounce(this.setValue, blurDebounceInterval);\n  }\n\n  public setValue = (value): void => {\n    if (this.state.incomingPropValue !== value) {\n      this.blurDebounced.cancel();\n      this.changeDebounced.cancel();\n      this.props.onSetValue(value);\n    }\n  };\n\n  public static getDerivedStateFromProps(props, state): null | Partial<State> {\n    const {value: incomingPropValue} = props;\n    if (incomingPropValue !== state.incomingPropValue) {\n      return {\n        valueIsChanging: true,\n        incomingPropValue,\n      };\n    }\n    return null;\n  }\n\n  public shouldComponentUpdate(nextProps, nextState): boolean {\n    const {valueIsChanging, incomingPropValue} = nextState;\n    if (valueIsChanging === true) {\n      this.setState(\n        {\n          valueIsChanging: false,\n          currentValue: incomingPropValue,\n        },\n        () => {\n          this.setValue(incomingPropValue);\n        },\n      );\n      return false;\n    }\n    return true;\n  }\n\n  public handleBlur = (event): void => {\n    const {value} = event.currentTarget;\n    const {\n      updateOnBlur,\n      isPristine,\n      value: propValue,\n      blurCallback,\n      name,\n    } = this.props;\n    this.setState({currentValue: value});\n    if (updateOnBlur) {\n      this.changeDebounced.cancel();\n      if (isPristine) {\n        // should update as we have just left a pristine input\n        this.blurDebounced(value);\n      } else if (propValue !== value) {\n        // should update because the value has changed\n        this.blurDebounced(value);\n      }\n    }\n    blurCallback(name, value);\n  };\n\n  public handleChange = (event): void => {\n    const {value} = event.currentTarget;\n    const {updateOnChange, changeCallback, name} = this.props;\n    this.setState({currentValue: value});\n    if (updateOnChange) {\n      this.changeDebounced(value);\n    }\n    changeCallback(name, value);\n  };\n\n  public handleKeyDown = (\n    event: React.KeyboardEvent<HTMLInputElement>,\n  ): void => {\n    const {keyDownCallback} = this.props;\n    if (event.key === 'Enter') {\n      this.changeDebounced.flush();\n    }\n    keyDownCallback(event);\n  };\n\n  public render(): JSX.Element {\n    const {\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      blurCallback,\n      blurDebounceInterval,\n      changeCallback,\n      changeDebounceInterval,\n      isPristine,\n      keyDownCallback,\n      name,\n      onSetValue,\n      updateOnBlur,\n      updateOnChange,\n      value,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      addonAfter,\n      addonBefore,\n      buttonAfter,\n      buttonBefore,\n      className,\n      elementRef,\n      elementWrapperClassName,\n      errorMessages,\n      help,\n      id,\n      label,\n      labelClassName,\n      layout,\n      required,\n      rowClassName,\n      showErrors,\n      type,\n      ...passthoughProps\n    } = this.props;\n\n    const markAsInvalid = showErrors && (errorMessages.length > 0 || required);\n\n    let control = (\n      <InputControl\n        {...passthoughProps}\n        className={markAsInvalid ? `is-invalid ${className}` : className}\n        id={id}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        onKeyDown={this.handleKeyDown}\n        elementRef={elementRef}\n        type={type}\n        value={this.state.currentValue}\n      />\n    );\n\n    if (type === 'hidden') {\n      return control;\n    }\n\n    const inputGroupProps = {\n      addonAfter,\n      addonBefore,\n      buttonAfter,\n      buttonBefore,\n    };\n\n    const rowProps = {\n      elementWrapperClassName,\n      labelClassName,\n      rowClassName,\n      label,\n      errorMessages,\n      htmlFor: id,\n      layout,\n      required,\n      showErrors,\n    };\n\n    if (addonBefore || addonAfter || buttonBefore || buttonAfter) {\n      control = <InputGroup {...inputGroupProps}>{control}</InputGroup>;\n    }\n\n    if (layout === 'elementOnly') {\n      return control;\n    }\n\n    return (\n      <Row {...rowProps}>\n        <>\n          {control}\n          {help ? <Help help={help} /> : null}\n          {showErrors ? <ErrorMessages messages={errorMessages} /> : null}\n        </>\n      </Row>\n    );\n  }\n}\n\nexport default Input; // as React.ComponentClass<InputProps>;\n","import * as React from 'react';\nimport {CommonProps} from './common-prop-types';\n\ntype ControlProps = React.InputHTMLAttributes<HTMLInputElement>;\ntype ControlPropsCleaned = Omit<ControlProps, 'id' | 'name'>;\n\ninterface FileControlProps extends CommonProps, ControlPropsCleaned {\n  elementRef: React.RefObject<HTMLInputElement>;\n}\n\ntype State = Record<string, unknown>;\n\n// A file control can only be set to an empty string.\n// I think we need to keep this as an uncontrolled component, so we override the\n// value.prop.\nclass FileControl extends React.Component<FileControlProps, State> {\n  public static defaultProps = {\n    elementRef: React.createRef<HTMLInputElement>(),\n  };\n  public render(): React.ReactElement<HTMLInputElement> {\n    const {elementRef, ...props} = this.props;\n    delete props.value;\n\n    return <input {...props} type=\"file\" ref={elementRef} />;\n  }\n}\n\nexport {FileControlProps};\nexport default FileControl;\n","import * as React from 'react';\nimport {componentDefaultProps} from './component-common';\nimport ErrorMessages from './error-messages';\nimport Help from './help';\nimport Row from './row';\nimport FileControl, {FileControlProps} from './controls/input-file';\n\nconst defaultProps = {\n  ...componentDefaultProps,\n  elementRef: React.createRef<HTMLInputElement>(),\n};\n\ntype FileProps = FileControlProps & typeof defaultProps;\n\ntype State = Record<string, unknown>;\n\nclass File extends React.Component<FileProps, State> {\n  public static defaultProps = defaultProps;\n\n  // Need to supply a constructor to be recognised as ComponentClass?\n  public constructor(props) {\n    super(props);\n  }\n\n  private handleChange = (event): void => {\n    const target = event.currentTarget;\n    const {onSetValue, changeCallback, name} = this.props;\n    onSetValue(target.files);\n\n    // Note: we sure the result of `target.files` instead of `target.value`.\n    // `target.value` is actually pretty useless. A web search for \"C:\\fakepath\\\"\n    // gives more details.\n    changeCallback(name, target.files);\n  };\n\n  public render(): JSX.Element {\n    const {errorMessages, help, id, layout, showErrors, ...inputProps} =\n      this.props;\n    Object.keys(componentDefaultProps).forEach((key): void => {\n      delete inputProps[key];\n    });\n\n    const control = (\n      <FileControl\n        {...inputProps}\n        className=\"form-control-file\"\n        id={id}\n        onChange={this.handleChange}\n      />\n    );\n\n    if (layout === 'elementOnly') {\n      return control;\n    }\n\n    return (\n      <Row {...this.props} htmlFor={id}>\n        <>\n          {control}\n          {help ? <Help help={help} /> : null}\n          {showErrors ? <ErrorMessages messages={errorMessages} /> : null}\n        </>\n      </Row>\n    );\n  }\n}\n\nexport {FileProps};\nexport default File;\n","import * as React from 'react';\nimport {componentDefaultProps} from './component-common';\nimport {CommonProps as ControlCommonProps} from './controls/common-prop-types';\nimport FormCheckGroup from './form-check-group';\n\ntype ControlCommonPropsCleaned = Omit<ControlCommonProps, 'id' | 'name'>;\n\ntype RadioLayoutType = 'inline' | 'stacked';\n\ninterface Option {\n  disabled?: boolean;\n  label: React.ReactNode;\n  value: string;\n}\n\nconst defaultProps = {\n  ...componentDefaultProps,\n  options: [] as Option[],\n  required: false,\n  type: 'stacked' as RadioLayoutType,\n  value: '',\n};\n\ntype RadioGroupProps = ControlCommonPropsCleaned &\n  typeof defaultProps & {\n    name: string;\n  };\n\nclass RadioGroup extends React.Component<\n  RadioGroupProps,\n  Record<string, unknown>\n> {\n  public elements = {};\n\n  public static defaultProps = defaultProps;\n\n  public constructor(props) {\n    super(props);\n  }\n\n  private handleChange = (event): void => {\n    const {value} = event.currentTarget;\n    const {onSetValue, changeCallback, name} = this.props;\n    onSetValue(value);\n    changeCallback(name, value);\n  };\n\n  private renderElement = (): JSX.Element[] => {\n    const {\n      disabled,\n      errorMessages,\n      id,\n      name,\n      options,\n      required,\n      showErrors,\n      type,\n      value,\n    } = this.props;\n\n    const markAsInvalid = showErrors && (errorMessages.length > 0 || required);\n\n    const className = `custom-control custom-radio${\n      type === 'inline' ? ' custom-control-inline' : ''\n    }`;\n\n    const inputClassName = `custom-control-input${\n      markAsInvalid ? ' is-invalid' : ''\n    }`;\n\n    const controls = options.map((radio) => {\n      const checked = value === radio.value;\n      const isDisabled = radio.disabled || disabled;\n      const inputId = `${id}--${radio.value}`;\n      const ref = React.createRef<HTMLInputElement>();\n      this.elements[radio.value] = ref;\n      return (\n        <div className={className} key={radio.value}>\n          <input\n            ref={ref}\n            checked={checked}\n            type=\"radio\"\n            value={radio.value}\n            onChange={this.handleChange}\n            disabled={isDisabled}\n            className={inputClassName}\n            name={name}\n            id={inputId}\n            required={required}\n          />\n          <label className=\"custom-control-label\" htmlFor={inputId}>\n            {radio.label}\n          </label>\n        </div>\n      );\n    });\n    return controls;\n  };\n\n  public render(): JSX.Element {\n    return (\n      <FormCheckGroup {...this.props}>\n        <>{this.renderElement()}</>\n      </FormCheckGroup>\n    );\n  }\n}\n\nexport default RadioGroup;\n","import * as React from 'react';\nimport classNames from 'classnames/dedupe'; // eslint-disable-line import/default\nimport {CommonProps} from './common-prop-types';\n\ntype ControlProps = React.SelectHTMLAttributes<HTMLSelectElement>;\ntype ControlPropsCleaned = Omit<ControlProps, 'id' | 'name'>;\n\ninterface SelectOption {\n  value: string;\n  label: string;\n  group?: string;\n}\n\ninterface Props extends CommonProps, ControlPropsCleaned {\n  options: SelectOption[];\n  multiple: boolean;\n  elementRef: React.RefObject<HTMLSelectElement>;\n}\n\ntype State = Record<string, unknown>;\n\nclass SelectControl extends React.Component<Props, State> {\n  public static defaultProps = {\n    multiple: false,\n    elementRef: React.createRef<HTMLSelectElement>(),\n  };\n\n  public constructor(props) {\n    super(props);\n  }\n\n  private renderOption = (item: SelectOption, key: string): JSX.Element => {\n    const {label, value, ...rest} = item;\n    const option = (\n      <option key={key} value={value} {...rest}>\n        {label}\n      </option>\n    );\n    return option;\n  };\n\n  public render(): JSX.Element {\n    const {options} = this.props;\n\n    let groups = options\n      .filter((item): string => (item.group ? item.group : ''))\n      .map((item): string => (item.group ? item.group : ''));\n\n    // Get the unique items in group.\n    const onlyUnique = (value, index, self): boolean => {\n      return self.indexOf(value) === index;\n    };\n\n    groups = groups.filter(onlyUnique);\n\n    let optionNodes: React.ReactNode[];\n\n    if (groups.length === 0) {\n      optionNodes = options.map((item, index) => {\n        return this.renderOption(item, `${index}`);\n      });\n    } else {\n      // For items without groups.\n      const itemsWithoutGroup = options.filter((item): boolean => !item.group);\n\n      optionNodes = itemsWithoutGroup.map((item, index) => {\n        return this.renderOption(item, `no-group-${index}`);\n      });\n\n      groups.forEach((group, groupIndex): void => {\n        const groupItems = options.filter(\n          (item): boolean => item.group === group,\n        );\n\n        const groupOptionNodes = groupItems.map((item, index) =>\n          this.renderOption(item, `${groupIndex}-${index}`),\n        );\n\n        optionNodes.push(\n          <optgroup label={group} key={groupIndex}>\n            {groupOptionNodes}\n          </optgroup>,\n        );\n      });\n    }\n\n    const {className, elementRef, ...selectProps} = this.props;\n    //delete selectProps.options;\n\n    return (\n      <select\n        {...selectProps}\n        className={classNames(['custom-select', className])}\n        ref={elementRef}>\n        {optionNodes}\n      </select>\n    );\n  }\n}\n\nexport {Props};\nexport default SelectControl;\n","import * as React from 'react';\nimport classNames from 'classnames/dedupe'; // eslint-disable-line import/default\nimport {componentDefaultProps} from './component-common';\nimport ErrorMessages from './error-messages';\nimport Help from './help';\nimport Row from './row';\nimport SelectControl, {Props as SelectControlProps} from './controls/select';\n\ninterface SelectOption {\n  value: string;\n  label: string;\n  disabled?: boolean;\n  className?: string;\n  group?: string;\n}\n\nconst defaultProps = {\n  ...componentDefaultProps,\n  options: [] as SelectOption[],\n  multiple: false,\n  elementRef: React.createRef<HTMLSelectElement>(),\n};\n\ntype SelectProps = SelectControlProps & typeof defaultProps;\n\ntype State = Record<string, unknown>;\n\nclass Select extends React.Component<SelectProps, State> {\n  public static defaultProps = defaultProps;\n\n  // Need to supply a constructor to be recognised as ComponentClass?\n  public constructor(props) {\n    super(props);\n  }\n\n  private handleChange = (event: React.FormEvent<HTMLSelectElement>): void => {\n    const target = event.currentTarget;\n    const {multiple, onSetValue, changeCallback, name} = this.props;\n    let value;\n    if (multiple) {\n      value = Array.from(target.options)\n        .filter((option): boolean => option.selected)\n        .map((option): string => option.value);\n    } else {\n      ({value} = target);\n    }\n    onSetValue(value);\n    changeCallback(name, value);\n  };\n\n  public render(): JSX.Element {\n    const {\n      className,\n      errorMessages,\n      help,\n      id,\n      layout,\n      name,\n      required,\n      showErrors,\n      ...inputProps\n    } = this.props;\n    Object.keys(componentDefaultProps).forEach((key): void => {\n      delete inputProps[key];\n    });\n\n    const markAsInvalid = showErrors && (errorMessages.length > 0 || required);\n\n    const control = (\n      <SelectControl\n        {...inputProps}\n        className={classNames(\n          markAsInvalid ? ['is-invalid', className] : className,\n        )}\n        elementRef={this.props.elementRef}\n        id={id}\n        name={name}\n        onChange={this.handleChange}\n      />\n    );\n\n    if (layout === 'elementOnly') {\n      return control;\n    }\n\n    return (\n      <Row {...this.props} htmlFor={id}>\n        <>\n          {control}\n          {help ? <Help help={help} /> : null}\n          {showErrors ? <ErrorMessages messages={errorMessages} /> : null}\n        </>\n      </Row>\n    );\n  }\n}\n\nexport {SelectProps};\nexport default Select;\n","import * as React from 'react';\nimport classNames from 'classnames/dedupe'; // eslint-disable-line import/default\nimport {CommonProps} from './common-prop-types';\n\ntype ControlProps = React.TextareaHTMLAttributes<HTMLTextAreaElement>;\ntype ControlPropsCleaned = Omit<ControlProps, 'id' | 'name'>;\n\ninterface TextareaControlProps extends CommonProps, ControlPropsCleaned {\n  cols: number;\n  rows: number;\n  value: string;\n  elementRef: React.RefObject<HTMLTextAreaElement>;\n}\n\nconst defaultProps = {\n  cols: 0, // React doesn't render the cols attribute if it is zero\n  rows: 3,\n  value: '',\n  elementRef: React.createRef<HTMLTextAreaElement>(),\n};\n\ntype State = Record<string, unknown>;\n\nclass TextareaControl extends React.Component<TextareaControlProps, State> {\n  public static defaultProps = defaultProps;\n\n  public constructor(props) {\n    super(props);\n  }\n\n  public render(): JSX.Element {\n    const {className, elementRef, ...inputProps} = this.props;\n    return (\n      <textarea\n        {...inputProps}\n        className={classNames(['form-control', className])}\n        ref={elementRef}\n      />\n    );\n  }\n}\n\nexport {TextareaControlProps};\nexport default TextareaControl;\n","import * as React from 'react';\nimport debounce, {DebouncedFunction} from '../debounce';\nimport {componentDefaultProps} from './component-common';\nimport ErrorMessages from './error-messages';\nimport Help from './help';\nimport Row from './row';\nimport TextareaControl, {TextareaControlProps} from './controls/textarea';\n\nconst defaultProps = {\n  ...componentDefaultProps,\n  value: '',\n  updateOnBlur: true,\n  updateOnChange: true,\n  blurDebounceInterval: 0,\n  changeDebounceInterval: 500,\n  cols: 0,\n  rows: 3,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n  blurCallback: (name: string, value: string): void => {},\n};\n\ntype TextareaProps = TextareaControlProps & typeof defaultProps;\n\ninterface State {\n  currentValue: string;\n  incomingPropValue: string;\n  valueIsChanging: boolean;\n}\n\nclass Textarea extends React.Component<TextareaProps, State> {\n  public static defaultProps = defaultProps;\n\n  private changeDebounced: DebouncedFunction;\n  private blurDebounced: DebouncedFunction;\n\n  public constructor(props) {\n    super(props);\n    const {value, onSetValue, changeDebounceInterval, blurDebounceInterval} =\n      props;\n    this.state = {\n      currentValue: value,\n      incomingPropValue: value,\n      valueIsChanging: false,\n    };\n    this.changeDebounced = debounce(onSetValue, changeDebounceInterval);\n    this.blurDebounced = debounce(onSetValue, blurDebounceInterval);\n  }\n\n  public static getDerivedStateFromProps(props, state): null | Partial<State> {\n    const {value: incomingPropValue} = props;\n    if (incomingPropValue !== state.incomingPropValue) {\n      return {\n        valueIsChanging: true,\n        incomingPropValue,\n      };\n    }\n    return null;\n  }\n\n  public shouldComponentUpdate(nextProps, nextState): boolean {\n    const {valueIsChanging, incomingPropValue} = nextState;\n    if (valueIsChanging === true) {\n      this.setState({\n        valueIsChanging: false,\n        currentValue: incomingPropValue,\n      });\n      this.props.onSetValue(incomingPropValue);\n      return false;\n    }\n    return true;\n  }\n  private handleChange = (event): void => {\n    const {updateOnChange, changeCallback, name} = this.props;\n    const {value} = event.currentTarget;\n    this.setState({currentValue: value});\n    if (updateOnChange) {\n      this.changeDebounced(value);\n    }\n    changeCallback(name, value);\n  };\n\n  private handleBlur = (event): void => {\n    const {updateOnBlur, blurCallback, name} = this.props;\n    const {value} = event.currentTarget;\n    this.setState({currentValue: value});\n    if (updateOnBlur) {\n      this.changeDebounced.cancel();\n      this.blurDebounced(value);\n    }\n    if (blurCallback) {\n      blurCallback(name, value);\n    }\n  };\n\n  public render(): JSX.Element {\n    const {...inputProps} = this.props;\n    Object.keys(componentDefaultProps).forEach((key): void => {\n      delete inputProps[key];\n    });\n\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    const {\n      blurDebounceInterval,\n      changeDebounceInterval,\n      updateOnBlur,\n      updateOnChange,\n      blurCallback,\n      ...filteredInputProps\n    } = inputProps;\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n\n    const {currentValue} = this.state;\n    const {\n      className,\n      elementRef,\n      errorMessages,\n      help,\n      id,\n      layout,\n      name,\n      required,\n      showErrors,\n    } = this.props;\n\n    const markAsInvalid = showErrors && (errorMessages.length > 0 || required);\n\n    const element = (\n      <TextareaControl\n        {...filteredInputProps}\n        className={markAsInvalid ? `is-invalid ${className}` : className}\n        id={id}\n        value={currentValue}\n        name={name}\n        onChange={this.handleChange}\n        onBlur={this.handleBlur}\n        elementRef={elementRef}\n      />\n    );\n\n    if (layout === 'elementOnly') {\n      return element;\n    }\n\n    return (\n      <Row {...this.props} htmlFor={id}>\n        <>\n          {element}\n          {help ? <Help help={help} /> : null}\n          {showErrors ? <ErrorMessages messages={errorMessages} /> : null}\n        </>\n      </Row>\n    );\n  }\n}\n\nexport default Textarea;\n","import {createContext} from 'react';\nimport {Argument as ClassValue} from 'classnames';\nimport {LayoutType} from '../types';\n\nconst defaultContextValue = {\n  elementWrapperClassName: '' as ClassValue,\n  labelClassName: '' as ClassValue,\n  layout: 'horizontal' as LayoutType,\n  rowClassName: '' as ClassValue,\n  validateBeforeSubmit: true,\n  validatePristine: false,\n};\n\nconst FrcContext = createContext(defaultContextValue);\n\nFrcContext.displayName = 'FrcContext';\n\nexport default FrcContext;\n","import * as React from 'react';\nimport classNames from 'classnames/dedupe';\nimport {Argument as ClassValue} from 'classnames';\nimport Formsy from 'formsy-react';\nimport {LayoutType} from './types';\nimport FrcContext from './context/frc';\n\nimport type {FormsyProps} from 'formsy-react/dist/Formsy';\n\ntype FormPropsCleaned = Omit<\n  React.FormHTMLAttributes<HTMLFormElement>,\n  'className' | 'onChange' | 'onInvalid' | 'onSubmit' | 'onError' | 'onReset'\n>;\n\ntype FormsyPropsCleaned = Omit<FormsyProps, 'className'>;\n\nconst formDefaultProps = {\n  layout: 'horizontal' as LayoutType,\n  className: '' as ClassValue,\n  elementWrapperClassName: '' as ClassValue,\n  labelClassName: '' as ClassValue,\n  rowClassName: '' as ClassValue,\n  validateBeforeSubmit: true,\n  validatePristine: false,\n  disabled: false,\n};\n\ntype DefaultProps = typeof formDefaultProps;\n\ntype FormProps = FormPropsCleaned & Partial<FormsyPropsCleaned> & DefaultProps;\n\ntype State = Record<string, unknown>;\n\nclass Form extends React.Component<FormProps, State> {\n  public static defaultProps = formDefaultProps;\n\n  public formsyForm = React.createRef<Formsy>();\n\n  public constructor(props) {\n    super(props);\n  }\n\n  public render(): JSX.Element {\n    const {\n      children,\n      className,\n      elementWrapperClassName,\n      labelClassName,\n      layout,\n      rowClassName,\n      validateBeforeSubmit,\n      validatePristine,\n      ...formsyPassthroughProps\n    } = this.props;\n\n    const contextProps = {\n      elementWrapperClassName,\n      labelClassName,\n      layout,\n      rowClassName,\n      validateBeforeSubmit,\n      validatePristine,\n    };\n\n    return (\n      <FrcContext.Provider value={contextProps}>\n        <Formsy\n          {...formsyPassthroughProps}\n          className={classNames([`form-${layout}`, className])}\n          ref={this.formsyForm}>\n          {children}\n        </Formsy>\n      </FrcContext.Provider>\n    );\n  }\n}\n\nexport default Form;\n","export const getDisplayName = (component: React.ComponentType<any>): string =>\n  component.displayName ||\n  component.name ||\n  (typeof component === 'string' ? component : 'Component');\n\n/**\n * Determine whether to show errors, or not.\n */\nexport const shouldShowErrors = (\n  isPristine: boolean,\n  isFormSubmitted: boolean,\n  isValid: boolean,\n  validatePristine: boolean,\n  validateBeforeSubmit: boolean,\n): boolean => {\n  if (isPristine === true) {\n    if (validatePristine === false) {\n      return false;\n    }\n  }\n  if (validateBeforeSubmit === false) {\n    if (isFormSubmitted === false) {\n      return false;\n    }\n  }\n  return isValid === false;\n};\n\nexport const getFallbackBoolean = <A, B>(a: A, b: B, c: boolean): boolean => {\n  if (typeof a === 'boolean') {\n    return a;\n  }\n  if (typeof b === 'boolean') {\n    return b;\n  }\n  return c;\n};\n\nexport const hashString = (inString: string): number => {\n  let hash = 0;\n  for (let i = 0; i < inString.length; i += 1) {\n    // eslint-disable-next-line no-bitwise\n    hash = ((hash << 5) - hash + inString.charCodeAt(i)) & 0xffffffff;\n  }\n  return hash;\n};\n\n/**\n * The ID is used as an attribute on the form control, and is used to allow\n * associating the label element with the form control.\n *\n * If we don't explicitly pass an `id` prop, we generate one based on the\n * `name` and `label` properties.\n */\nexport const getId = (\n  id: string,\n  label: React.ReactNode,\n  name: string,\n): string => {\n  if (id !== '') {\n    return id;\n  }\n  return [\n    'frc',\n    name.split('[').join('_').replace(']', '').replace('.', '_'),\n    hashString(JSON.stringify(label)),\n  ].join('-');\n};\n","import * as React from 'react';\nimport FrcContext from '../context/frc';\nimport {\n  getId,\n  getFallbackBoolean,\n  getDisplayName,\n  shouldShowErrors,\n} from '../utils';\nimport {LayoutType, ComponentValue} from '../types';\n\nimport type {PassDownProps} from 'formsy-react/dist/withFormsy';\n\n/**\n * Props coming from the `withFormsy` hoc.\n */\ntype ExternalProps<V> = PassDownProps<V>;\n\n/**\n * Props that come from our components.\n */\ninterface RequiredFromOriginalComponentProps {\n  validateBeforeSubmit: boolean;\n  validatePristine: boolean;\n  layout: LayoutType;\n  name: string;\n  value: ComponentValue;\n  disabled: boolean;\n  id: string;\n  label: React.ReactNode;\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  componentRef: React.RefObject<any>;\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n}\n\n/**\n * withFRC HOC\n *\n * This HOC provides shared code for our form components.\n *\n * We use this to merge props set using our FrcContext, so that\n * we can set commonly used props on an enclosing component.\n *\n * This allows us to set these properties 'as a whole' for each component in the\n * the form, while retaining the ability to override the prop on a per-component\n * basis.\n */\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type, @typescript-eslint/explicit-module-boundary-types\nconst withFRC = <TOriginalProps extends Record<string, unknown>>(\n  Component:\n    | React.ComponentClass<TOriginalProps>\n    | React.FunctionComponent<TOriginalProps>,\n) => {\n  type ResultProps = TOriginalProps &\n    ExternalProps<TOriginalProps> &\n    RequiredFromOriginalComponentProps;\n\n  const result = class FrcWrapper extends React.Component<\n    ResultProps,\n    Record<string, unknown>\n  > {\n    public static displayName = `withFRC(${getDisplayName(Component)})`;\n    public static contextType = FrcContext;\n\n    public constructor(props: ResultProps) {\n      super(props);\n    }\n\n    public render(): JSX.Element {\n      const {\n        layout: contextLayout,\n        validateBeforeSubmit: contextValidateBeforeSubmit,\n        validatePristine: contextValidatePristine,\n      } = this.context;\n\n      const {\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        attachToForm,\n        detachFromForm,\n        errorMessage,\n        hasValue,\n        innerRef,\n        isRequired,\n        isValidValue,\n        resetValue,\n        runValidation,\n        setValidations,\n        showError,\n        showRequired,\n        validate,\n        validationError,\n        validationErrors,\n        validations,\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        isFormDisabled,\n        isFormSubmitted,\n        isPristine,\n        isValid,\n        setValue,\n        validateBeforeSubmit: propValidateBeforeSubmit,\n        validatePristine: propValidatePristine,\n        layout: propLayout,\n        disabled: propDisabled,\n        id: propId,\n        label: propLabel,\n        name: propName,\n        componentRef,\n        ...props\n      } = this.props;\n\n      const validatePristine = getFallbackBoolean(\n        propValidatePristine,\n        contextValidatePristine,\n        false,\n      );\n\n      const validateBeforeSubmit = getFallbackBoolean(\n        propValidateBeforeSubmit,\n        contextValidateBeforeSubmit,\n        true,\n      );\n\n      const showErrors = shouldShowErrors(\n        isPristine,\n        isFormSubmitted,\n        isValid,\n        validatePristine,\n        validateBeforeSubmit,\n      );\n\n      const layout = propLayout || contextLayout;\n\n      const newProps = {\n        id: getId(propId || '', propLabel || '', propName),\n        label: propLabel,\n        name: propName,\n        ref: componentRef,\n        disabled: isFormDisabled || propDisabled || false,\n        layout,\n        showErrors,\n        onSetValue: setValue,\n      };\n\n      return <Component {...(props as TOriginalProps)} {...newProps} />;\n    }\n  };\n\n  return result;\n};\n\nexport default withFRC;\n","import {withFormsy} from 'formsy-react';\nimport CheckboxComponent from './components/checkbox';\nimport CheckboxGroupComponent from './components/checkbox-group';\nimport InputComponent from './components/input';\nimport FileComponent from './components/input-file';\nimport RadioGroupComponent from './components/radio-group';\nimport SelectComponent from './components/select';\nimport TextareaComponent from './components/textarea';\nimport Form from './form';\nimport FrcContext from './context/frc';\nimport Row from './components/row';\nimport withFRC from './hoc/component';\n\nconst Checkbox = withFormsy(withFRC(CheckboxComponent));\nconst CheckboxGroup = withFormsy(withFRC(CheckboxGroupComponent));\nconst Input = withFormsy(withFRC(InputComponent));\nconst File = withFormsy(withFRC(FileComponent));\nconst RadioGroup = withFormsy(withFRC(RadioGroupComponent));\nconst Select = withFormsy(withFRC(SelectComponent));\nconst Textarea = withFormsy(withFRC(TextareaComponent));\n\nexport {\n  Form,\n  FrcContext,\n  Row,\n  Checkbox,\n  CheckboxGroup,\n  File,\n  Input,\n  RadioGroup,\n  Select,\n  Textarea,\n};\n"],"sourceRoot":""}